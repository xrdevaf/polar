@using System.ComponentModel.DataAnnotations
@using MatBlazor
@using BlazorLocal.PageModels;

<div>
    <MatDialog @bind-IsOpen="@ViewModel.DialogIsOpen" CanBeClosed="false">
        <EditForm Model="ViewModel.Password" OnValidSubmit="@(() => { SaveItem.InvokeAsync(ViewModel.Password); })">
            <MatDialogTitle class="diHeader">
                <h3>Passwort ändern für @ViewModel.User.UserName</h3>
                <div class="btn-group">
                    <input type="submit" value="Speichern" class="btn btn-nav btn-primary mr-1" style="float: right;" />
                    <span class="btn btn-nav" @onclick="@(e => {ViewModel.DialogIsOpen = false;})">X</span>
                </div>
                <hr />
            </MatDialogTitle>
            <MatDialogContent>
                <DataAnnotationsValidator />
                <div style="width: 600px;">
                    @if (!string.IsNullOrEmpty(ViewModel.ErrorMessage))
                    {
                        <div style="color: #dc3545; max-width:600px;" class="mb-2">
                            @ViewModel.ErrorMessage
                        </div>
                    }
                    <div class="form-group row mb-1">
                        <label for="OldPassword" class="col-4 pl-0">Altes Passwort</label>
                        <InputText @bind-Value="@ViewModel.Password.OldPassword" Class="form-control form-control-sm col-8" id="OldPassword"></InputText>
                        <ValidationMessage For="@(() => ViewModel.Password.OldPassword)"/>
                    </div>
                    <div class="form-group row mb-1">
                        <label for="NewPassword" class="col-4 pl-0">Neues Passwort</label>
                        <InputText @bind-Value="@ViewModel.Password.NewPassword" Class="form-control form-control-sm col-8" id="NewPassword"></InputText>
                        <ValidationMessage For="@(() => ViewModel.Password.NewPassword)"/>
                    </div>
                </div>
            </MatDialogContent>
        </EditForm>
    </MatDialog>
</div>
@code {
    [Parameter]
    public EditPasswordViewModel ViewModel { get; set; }

    [Parameter]
    public EventCallback<PasswordModel> SaveItem { get; set; }
}
